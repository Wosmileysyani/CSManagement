@model CSManagement.Models.Student

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("Edit", "Students", FormMethod.Post, new { enctype = "multipart/form-data", accept_charset = "utf-8" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Student</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Stu_ID)

        <div class="form-group">
            @Html.LabelFor(model => model.Stu_Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Stu_Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Stu_Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Stu_Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Stu_Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Stu_Name, "", new { @class = "text-danger" })
            </div>
        </div>

                    <div class="form-group col-md-3">
                        @Html.LabelFor(model => model.Stu_Surname, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Stu_Surname, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Stu_Surname, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row">
                    <div class="form-group col-md-2">
                        @Html.LabelFor(model => model.Stu_Sex, htmlAttributes: new { @class = "control-label" })
                        <br />
                        @Html.DropDownListFor(model => model.Stu_Sex, new List<SelectListItem>()
                        {
                            new SelectListItem() { Text = "เพศชาย", Value = "True" },
                            new SelectListItem() { Text = "เพศหญิง", Value = "False"}
                        }, "เลือกเพศ", new { @id = "Stu_Sex", @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Stu_Sex, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group col-md-3">
                        @Html.LabelFor(model => model.Stu_Birthday, htmlAttributes: new { @class = "control-label" })
                        <div class="input-group">
                            <div class="input-group-addon">
                                <i class="fa fa-calendar"></i>
                            </div>
                            <input type="text" id="birthday" name="birthday" class="form-control" data-inputmask="'alias': 'dd-mm-yyyy'" data-mask>
                        </div>
                    </div>

                    <div class="form-group col-md-4">
                        @Html.LabelFor(model => model.Stu_Email, htmlAttributes: new { @class = "control-label" })
                        <div class="input-group">
                            <span class="input-group-addon"><i class="fa fa-envelope"></i></span>
                            @Html.EditorFor(model => model.Stu_Email, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.Stu_Email, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group  col-md-3">
                        @Html.LabelFor(model => model.Stu_Tel, htmlAttributes: new { @class = "control-label" })
                        <div class="input-group">
                            <div class="input-group-addon">
                                <i class="fa fa-phone"></i>
                            </div>
                            <input type="text" id="tel" name="tel" class="form-control" data-inputmask='"mask": "(999) 999-9999"' data-mask>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="form-group col-md-12">
                        @Html.LabelFor(model => model.Stu_Address, htmlAttributes: new { @class = "control-label" })
                        <div class="input-group">
                            <span class="input-group-addon"><i class="fa fa-home"></i></span>
                            @Html.EditorFor(model => model.Stu_Address, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.Stu_Address, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row">
                    <div class="form-group col-md-4">
                        @Html.LabelFor(model => model.Stu_School, htmlAttributes: new { @class = "control-label" })
                        <div class="input-group">
                            <span class="input-group-addon"><i class="fa fa-university"></i></span>
                            @Html.DropDownList("Stu_School", null, htmlAttributes: new { @class = "form-control" })
                        </div>
                        @Html.ValidationMessageFor(model => model.Stu_School, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group col-md-4">
                        @Html.LabelFor(model => model.Stu_OldEdu, htmlAttributes: new { @class = "control-label" })
                        <div class="input-group">
                            <span class="input-group-addon"><i class="fa fa-graduation-cap"></i></span>
                            @Html.DropDownListFor(model => model.Stu_OldEdu, new List<SelectListItem>()
                            {
                                new SelectListItem() { Text = "มัธยมปลาย(ม.6)", Value = "มัธยมปลาย(ม.6)" },
                                new SelectListItem() { Text = "ปริญญาวิชาชีพ(ปวช.)", Value = "ปริญญาวิชาชีพ(ปวช.)" },
                                new SelectListItem() { Text = "การศึกษานอกสถานที่(กศน.)", Value = "การศึกษานอกสถานที่(กศน.)" },
                                new SelectListItem() { Text = "อื่นๆ", Value = "อื่นๆ"}
                            }, "เลือกวุฒิการศึกษา", new { @id = "Stu_OldEdu", @class = "form-control" })
                        </div>
                        @Html.ValidationMessageFor(model => model.Stu_OldEdu, "", new { @class = "text-danger" })
                    </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Stu_Img, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Stu_Img, new { htmlAttributes = new { @class = "form-control",@type="file" } })
                @Html.ValidationMessageFor(model => model.Stu_Img, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
